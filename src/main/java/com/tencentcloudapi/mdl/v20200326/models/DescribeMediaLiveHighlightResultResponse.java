/*
 * Copyright (c) 2017-2018 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.tencentcloudapi.mdl.v20200326.models;

import com.tencentcloudapi.common.AbstractModel;
import com.tencentcloudapi.common.SSEResponseModel;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;

public class DescribeMediaLiveHighlightResultResponse extends AbstractModel {

    /**
    * Highlight results information.
    */
    @SerializedName("Info")
    @Expose
    private HighlightResInfoResp [] Info;

    /**
    * Collection id.
    */
    @SerializedName("Id")
    @Expose
    private String Id;

    /**
    * Media live broadcast channel id.
    */
    @SerializedName("ChannelId")
    @Expose
    private String ChannelId;

    /**
    * Number of pages.
    */
    @SerializedName("PageNum")
    @Expose
    private Long PageNum;

    /**
    * Paging Size.
    */
    @SerializedName("PageSize")
    @Expose
    private Long PageSize;

    /**
    * The total number of eligible entries in the background.
    */
    @SerializedName("TotalNum")
    @Expose
    private Long TotalNum;

    /**
    * The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
    */
    @SerializedName("RequestId")
    @Expose
    private String RequestId;

    /**
     * Get Highlight results information. 
     * @return Info Highlight results information.
     */
    public HighlightResInfoResp [] getInfo() {
        return this.Info;
    }

    /**
     * Set Highlight results information.
     * @param Info Highlight results information.
     */
    public void setInfo(HighlightResInfoResp [] Info) {
        this.Info = Info;
    }

    /**
     * Get Collection id. 
     * @return Id Collection id.
     */
    public String getId() {
        return this.Id;
    }

    /**
     * Set Collection id.
     * @param Id Collection id.
     */
    public void setId(String Id) {
        this.Id = Id;
    }

    /**
     * Get Media live broadcast channel id. 
     * @return ChannelId Media live broadcast channel id.
     */
    public String getChannelId() {
        return this.ChannelId;
    }

    /**
     * Set Media live broadcast channel id.
     * @param ChannelId Media live broadcast channel id.
     */
    public void setChannelId(String ChannelId) {
        this.ChannelId = ChannelId;
    }

    /**
     * Get Number of pages. 
     * @return PageNum Number of pages.
     */
    public Long getPageNum() {
        return this.PageNum;
    }

    /**
     * Set Number of pages.
     * @param PageNum Number of pages.
     */
    public void setPageNum(Long PageNum) {
        this.PageNum = PageNum;
    }

    /**
     * Get Paging Size. 
     * @return PageSize Paging Size.
     */
    public Long getPageSize() {
        return this.PageSize;
    }

    /**
     * Set Paging Size.
     * @param PageSize Paging Size.
     */
    public void setPageSize(Long PageSize) {
        this.PageSize = PageSize;
    }

    /**
     * Get The total number of eligible entries in the background. 
     * @return TotalNum The total number of eligible entries in the background.
     */
    public Long getTotalNum() {
        return this.TotalNum;
    }

    /**
     * Set The total number of eligible entries in the background.
     * @param TotalNum The total number of eligible entries in the background.
     */
    public void setTotalNum(Long TotalNum) {
        this.TotalNum = TotalNum;
    }

    /**
     * Get The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem. 
     * @return RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public String getRequestId() {
        return this.RequestId;
    }

    /**
     * Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     * @param RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public void setRequestId(String RequestId) {
        this.RequestId = RequestId;
    }

    public DescribeMediaLiveHighlightResultResponse() {
    }

    /**
     * NOTE: Any ambiguous key set via .set("AnyKey", "value") will be a shallow copy,
     *       and any explicit key, i.e Foo, set via .setFoo("value") will be a deep copy.
     */
    public DescribeMediaLiveHighlightResultResponse(DescribeMediaLiveHighlightResultResponse source) {
        if (source.Info != null) {
            this.Info = new HighlightResInfoResp[source.Info.length];
            for (int i = 0; i < source.Info.length; i++) {
                this.Info[i] = new HighlightResInfoResp(source.Info[i]);
            }
        }
        if (source.Id != null) {
            this.Id = new String(source.Id);
        }
        if (source.ChannelId != null) {
            this.ChannelId = new String(source.ChannelId);
        }
        if (source.PageNum != null) {
            this.PageNum = new Long(source.PageNum);
        }
        if (source.PageSize != null) {
            this.PageSize = new Long(source.PageSize);
        }
        if (source.TotalNum != null) {
            this.TotalNum = new Long(source.TotalNum);
        }
        if (source.RequestId != null) {
            this.RequestId = new String(source.RequestId);
        }
    }


    /**
     * Internal implementation, normal users should not use it.
     */
    public void toMap(HashMap<String, String> map, String prefix) {
        this.setParamArrayObj(map, prefix + "Info.", this.Info);
        this.setParamSimple(map, prefix + "Id", this.Id);
        this.setParamSimple(map, prefix + "ChannelId", this.ChannelId);
        this.setParamSimple(map, prefix + "PageNum", this.PageNum);
        this.setParamSimple(map, prefix + "PageSize", this.PageSize);
        this.setParamSimple(map, prefix + "TotalNum", this.TotalNum);
        this.setParamSimple(map, prefix + "RequestId", this.RequestId);

    }
}

